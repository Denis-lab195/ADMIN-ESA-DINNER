<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Admin Dashboard - Ticket Sales</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #eef2f7;
      padding: 20px;
    }

    h2, h3 {
      text-align: center;
      color: #0044cc;
    }

    #sellersList button, #viewAllBtn, #viewTicketTypeBtn{
      display: block;
      width: 100%;
      padding: 10px;
      margin: 5px auto;
      max-width: 300px;
      font-weight: bold;
      border-radius: 5px;
      background-color: #007bff;
      color: white;
      border: none;
      cursor: pointer;
    }

    #sellersList button:hover, #viewAllBtn:hover {
      background-color: #0056b3;
    }

    table {
      width: 100%;
      margin-top: 20px;
      border-collapse: collapse;
    }

    th, td {
      padding: 10px;
      border: 1px solid #ccc;
      text-align: left;
    }

    th {
      background-color: #0044cc;
      color: white;
    }

    #exportBtn {
      background-color: green;
      color: white;
      padding: 10px;
      border: none;
      margin-top: 10px;
      border-radius: 5px;
      cursor: pointer;
    }

    #exportBtn:hover {
      background-color: darkgreen;
    }

    .totals {
      margin-top: 20px;
      font-weight: bold;
      font-size: 1.1em;
    }
  </style>
</head>
<body>
  <h2>Admin Ticket Sales Dashboard</h2>
  
  <button onclick="window.location.href='index.html'" style="background-color: #007bff; color: white; border: none; padding: 10px; border-radius: 5px; font-weight: bold; margin-bottom: 20px; cursor: pointer;">
    üîô Back to Login
  </button>
  <button id="viewAllBtn">üìä View All Sales Entries</button>
  <button id="viewTicketTypeBtn">üéüÔ∏è View Ticket Type Analysis</button>
  <h3>List of Salespersons</h3>
  <div id="sellersList"></div>

  <div id="sellerData" style="display:none;">
    <h3 id="sellerNameHeader"></h3>
    <table id="salesTable">
      <thead>
        <tr>
          <th>Seller</th>
          <th>Customer Name</th>
          <th>Contact</th>
          <th>Ticket Type</th>
          <th>Amount Paid</th>
          <th>Payment Method</th>
        </tr>
      </thead>
      <tbody id="salesBody"></tbody>
    </table>
    <div class="totals" id="summaryData"></div>
    <button id="exportBtn">Export to Excel</button>
  </div>

  <script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.0/firebase-app.js";
    import { getDatabase, ref, onValue } from "https://www.gstatic.com/firebasejs/11.6.0/firebase-database.js";

    const firebaseConfig = {
      apiKey: "AIzaSyAL_ZAAACf2w0f3pl6twgQaFv4heUOPnP0",
      authDomain: "esa-mmust.firebaseapp.com",
      databaseURL: "https://esa-mmust-default-rtdb.firebaseio.com",
      projectId: "esa-mmust",
      storageBucket: "esa-mmust.firebasestorage.app",
      messagingSenderId: "1032408799607",
      appId: "1:1032408799607:web:ec6385b2f6e19d00baa972",
      measurementId: "G-XQ32GJJ7F7"
    };

    const app = initializeApp(firebaseConfig);
    const database = getDatabase(app);

    const sellersListDiv = document.getElementById("sellersList");
    const salesBody = document.getElementById("salesBody");
    const sellerData = document.getElementById("sellerData");
    const sellerNameHeader = document.getElementById("sellerNameHeader");
    const summaryData = document.getElementById("summaryData");

    let allSalesData = {}; // cache sales data

    function loadSellers() {
      const salesRef = ref(database, "sales/");
      onValue(salesRef, snapshot => {
        const data = snapshot.val();
        allSalesData = data || {};
        sellersListDiv.innerHTML = "";

        for (let seller in allSalesData) {
          const btn = document.createElement("button");
          btn.innerText = seller;
          btn.onclick = () => showSalesForSeller(seller, allSalesData[seller]);
          sellersListDiv.appendChild(btn);
        }
      });
    }

    function showSalesForSeller(seller, entries) {
      sellerNameHeader.innerText = `Sales by ${seller}`;
      salesBody.innerHTML = "";
      sellerData.style.display = "block";

      let totalPerType = {};
      let grandTotal = 0;

      for (let key in entries) {
        const e = entries[key];
        const row = document.createElement("tr");
        row.innerHTML = `
          <td>${seller}</td>
          <td>${e.customerName}</td>
          <td>${e.customerContact}</td>
          <td>${e.ticketType}</td>
          <td>${e.amountPaid}</td>
          <td>${e.paymentMethod}</td>
        `;
        salesBody.appendChild(row);

        if (!totalPerType[e.ticketType]) totalPerType[e.ticketType] = 0;
        totalPerType[e.ticketType] += parseFloat(e.amountPaid);
        grandTotal += parseFloat(e.amountPaid);
      }

      displaySummary(totalPerType, grandTotal);
    }

    function showAllSales() {
      sellerNameHeader.innerText = "All Sales Entries";
      salesBody.innerHTML = "";
      sellerData.style.display = "block";

      let totalPerType = {};
      let grandTotal = 0;

      for (let seller in allSalesData) {
        for (let key in allSalesData[seller]) {
          const e = allSalesData[seller][key];
          const row = document.createElement("tr");
          row.innerHTML = `
            <td>${seller}</td>
            <td>${e.customerName}</td>
            <td>${e.customerContact}</td>
            <td>${e.ticketType}</td>
            <td>${e.amountPaid}</td>
            <td>${e.paymentMethod}</td>
          `;
          salesBody.appendChild(row);

          if (!totalPerType[e.ticketType]) totalPerType[e.ticketType] = 0;
          totalPerType[e.ticketType] += parseFloat(e.amountPaid);
          grandTotal += parseFloat(e.amountPaid);
        }
      }

      displaySummary(totalPerType, grandTotal);
    }
    document.getElementById("viewTicketTypeBtn").addEventListener("click", () => {
  window.location.href = "ticket-type-analysis.html";
});


    function displaySummary(totalPerType, grandTotal) {
      let summary = "<h4>Summary</h4>";
      for (let type in totalPerType) {
        summary += `${type}: KES ${totalPerType[type].toFixed(2)}<br>`;
      }
      summary += `<br><strong>Total Amount to Account For: KES ${grandTotal.toFixed(2)}</strong>`;
      summaryData.innerHTML = summary;
    }

    function exportTableToExcel(tableID, filename = '') {
      const downloadLink = document.createElement("a");
      const table = document.getElementById(tableID);
      const html = table.outerHTML.replace(/ /g, '%20');
      filename = filename ? filename + '.xls' : 'excel_data.xls';
      downloadLink.href = 'data:application/vnd.ms-excel,' + html;
      downloadLink.download = filename;
      downloadLink.click();
    }

    document.getElementById("exportBtn").addEventListener("click", () => {
      const title = sellerNameHeader.innerText.replace(/ /g, "_");
      exportTableToExcel("salesTable", title);
    });

    document.getElementById("viewAllBtn").addEventListener("click", showAllSales);

    loadSellers();
  </script>
</body>
</html>
